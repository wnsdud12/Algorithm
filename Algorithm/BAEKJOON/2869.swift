/*
 이 문제도 푸는 데 오래 걸렸는데
 a - 낮에 올라가는 거리, b - 밤에 내려오는 거리, v - 목표 거리라고 했을 때
 (v-a)/(a-b)를 계산하고 소수점이 있다면 올림하고 1을 더한다는 것은 일찍 알았지만
 Foundation을 임포트를 하지 않았더니 다른 이상한 모듈(Darwin)이 임포트 되버려서 틀린 것을 모르고 더 헤메 버렸다...

 "(v-a)/(a-b)의 식이 나오는 이유"
 v까지 올라가는 날짜를 d로 했을 때
 (a-b)만큼 매일 올라가고 마지막 날에는 a만큼 더 올라가니
 (a-b) * d + a >= v라는 식이 나온다
 이 식을 변형 해주면
 (a-b) * d >= v-a
 d >= (v-a)/(a-b)가 나온다
 나눗셈을 했을 때 소수가 나올 수도 있는데
 a = 5, b = 2, v = 10이라고 가정했을 때
 1일차 낮 = 5, 1일차 밤 = 2
 2일차 낮 = 7, 2일차 밤 = 5
 3일차 낮에 10으로 3일째에 도착한다.
 하지만 식으로 나타냈을 때
 d >= 5/3 즉 , 1.666...으로 계산 되는데
 0.1 만큼 더 가더라도 결국 하루 더 간 것이니 소수를 올림해주었고
 1을 더한 이유는 마지막 날에 a만큼 더 올라가지만 계산 식에는 마지막 날을 빼고 계산했기 때문에 1을 더했다.

 if input[0] == input[2] { print(1) }은
 a = 5, b = 2, v = 5라고 가정 했을 때
 1일차 낮에 바로 목표지점까지 도착하기 때문

 */

import Foundation

var input = readLine()!.split{$0==" "}.map{Double($0)!}
if input[0] == input[2] {
    print(1)
} else {
    var result = (input[2]-input[0])/(input[0]-input[1])
    var x = ceil(result)
    print(Int(x) + 1)
}
