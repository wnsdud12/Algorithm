
import Foundation

var input = Int(readLine()!)!

for _ in 1 ... input {
    var k = Int(readLine()!)!
    var n = Int(readLine()!)!
    var i = 1
    var arr: [Int] = [] // 각 항마다 1~n만큼 넣고 인덱스만큼 곱하기해준후 reduce로 합칠것
    while n > 1 {
        arr.append((0...n).reduce(0, +))
        n -= 1
    }
    arr.append(1)
    var newArr: [Int] = []
    for i in arr.indices {
        print("arr[i] : \(arr[i]), i : \(i)")
        newArr.append(arr[i] * (i+1))
    }
    var x = newArr.reduce(0, +)
    print(x)
}
/*
 3층3호
 2층3호+2층2호+1
 (1층3호+1층2호+1)+(1층2호+1)+1
 1층3호+1층2호*2+3

 3층5호
 2층5호+2층4호+2층3호+2층2호+1
 (1층5호+1층4호+1층3호+1층2호+1)+(1층4호+1층3호+1층2호+1)+(1층3호+1층2호+1)+(1층2호+1)+1
 1층5호+1층4호*2+1층3호*3+1층2호*4+5

 4층4호
 3층4호+3층3호+3층2호+1
 (2층4호+2층3호+2층2호+1)+(2층3호+2층2호+1)+(2층2호+1)+1
 ((1층4호+1층3호+1층2호+1)+(1층3호+1층2호+1)+(1층2호+1)+1)+((1층3호+1층2호+1)+(1층2호+1)+1)+(1층2호+1)+1+1
 1층4호+1층3호*3+1층2호*6+10
 1 3 6 10
4호*1+3호*3+2호*6+10

 5층3호
 4층3호+4층2호+1
 (3층3호+3층2호+1)+(3층2호+1)+1
 ((2층3호+2층2호+1)+(2층2호+1)+1)+((2층2호+1)+1)+1
 ((1층3호+1층2호+1+1층2호+1+1)+(1층2호+1+1+1))+(1층2호+1+1+1)+1
 1층3호+1층2호*4+10
 1 4 10
 3호*1+2호*4+10

 (0층1호~0층n호) * X + (0층1호~0층n-1호) * X + (0층1호~0층n-2호) * X ~~~ 하는 것은 알겠으나
 X가 각각 얼마나 와야 될지 모르겠다

 /*
 k층n호 (틀림)
 1~n * 1 + 1~(n-1) * 2 + 1~(n-2) * 3 + 1~(n-3) * 4 ... n-1 > 1
  */
 */
